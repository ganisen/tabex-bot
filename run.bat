@echo off
rem –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ Tabex Bot —á–µ—Ä–µ–∑ Docker –¥–ª—è Windows
rem –ê–≤—Ç–æ—Ä: Tabex Bot Team

setlocal enabledelayedexpansion

echo üö≠ Tabex Bot - Docker Management Script (Windows)
echo ================================================

rem –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo [INFO] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...

docker --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop –¥–ª—è Windows.
    pause
    exit /b 1
)

docker-compose --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.
    pause
    exit /b 1
)

echo [SUCCESS] –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

rem –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
set "COMMAND=%~1"
if "%COMMAND%"=="" set "COMMAND=start"

rem –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
if /i "%COMMAND%"=="start" goto :start
if /i "%COMMAND%"=="stop" goto :stop  
if /i "%COMMAND%"=="restart" goto :restart
if /i "%COMMAND%"=="logs" goto :logs
if /i "%COMMAND%"=="status" goto :status
if /i "%COMMAND%"=="update" goto :update
goto :help

:start
echo [INFO] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...

rem –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if not exist ".env" (
    echo [WARNING] .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
    
    if exist ".env.example" (
        echo [INFO] –°–æ–∑–¥–∞–Ω–∏–µ .env –∏–∑ .env.example...
        copy ".env.example" ".env"
        echo [WARNING] –í–ù–ò–ú–ê–ù–ò–ï: –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª –∏ —É–∫–∞–∂–∏—Ç–µ BOT_TOKEN!
        echo [WARNING] –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ —É @BotFather –≤ Telegram
        
        rem –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        set /p "EDIT=–û—Ç–∫—Ä—ã—Ç—å .env –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è? (y/n): "
        if /i "!EDIT!"=="y" notepad .env
    ) else (
        echo [ERROR] .env.example —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω
        pause
        exit /b 1
    )
)

rem –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo [INFO] –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...
if not exist "data" mkdir data
if not exist "logs" mkdir logs

echo [SUCCESS] –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã
echo [INFO] –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞...

docker-compose build --no-cache
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ –æ–±—Ä–∞–∑–∞
    pause
    exit /b 1
)

echo [SUCCESS] –û–±—Ä–∞–∑ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ
echo [INFO] –ó–∞–ø—É—Å–∫ Tabex Bot...

docker-compose up -d
if errorlevel 1 (
    echo [ERROR] –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    pause
    exit /b 1
)

echo [SUCCESS] üö≠ Tabex Bot –∑–∞–ø—É—â–µ–Ω!
echo [INFO] –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: run.bat logs
echo [INFO] –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: run.bat stop
goto :end

:stop
echo [INFO] –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Tabex Bot...
docker-compose down
echo [SUCCESS] Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
goto :end

:restart
echo [INFO] –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Tabex Bot...
docker-compose down
timeout /t 2 /nobreak >nul
docker-compose up -d
echo [SUCCESS] Bot –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω
goto :end

:logs
echo [INFO] –õ–æ–≥–∏ Tabex Bot:
docker-compose logs -f tabex-bot
goto :end

:status
echo [INFO] –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:
docker-compose ps
echo.
echo [INFO] –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:
for /f "tokens=*" %%i in ('docker-compose ps -q') do (
    docker stats --no-stream %%i 2>nul
)
goto :end

:update
echo [INFO] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...
git pull origin main
echo [INFO] –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...
docker-compose build --no-cache
echo [INFO] –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...
docker-compose down
docker-compose up -d
echo [SUCCESS] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
goto :end

:help
echo –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: run.bat {start^|stop^|restart^|logs^|status^|update}
echo.
echo –ö–æ–º–∞–Ω–¥—ã:
echo   start   - –ó–∞–ø—É—Å—Ç–∏—Ç—å bot (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
echo   stop    - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å bot
echo   restart - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å bot
echo   logs    - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
echo   status  - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
echo   update  - –û–±–Ω–æ–≤–∏—Ç—å –∏–∑ git –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
goto :end

:end
pause
