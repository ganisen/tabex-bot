"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram-–±–æ—Ç–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –¢–∞–±–µ–∫—Å–µ.

–°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º.
"""
import logging
import re
from datetime import datetime, timedelta, date
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

from core.models.user import User
from core.models.treatment import TreatmentCourse
from core.services.reminder_service import reminder_service
from core.services.character_service import character_service
from core.services.schedule_service import schedule_service
from database.repositories import UserRepository, TreatmentRepository, TabexRepository
from database.connection import init_database

logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –∞—Ä–µ—Å—Ç –∏ –¥–æ–ø—Ä–æ—Å —É –ì–∞—Å–ø–æ–¥–∞.
    
    –ì–∞—Å–ø–æ–¥ –∞—Ä–µ—Å—Ç–æ–≤—ã–≤–∞–µ—Ç –∫—É—Ä–∏–ª—å—â–∏–∫–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
    """
    user = update.effective_user
    user_repo = UserRepository()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        await init_database()
        
        # –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥–∏ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è (–æ—Ç–º–µ–Ω–∞ /quit)
        context.user_data.pop('awaiting_deletion_confirmation', None)
        context.user_data.pop('user_to_delete', None)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        existing_user = await user_repo.get_by_telegram_id(user.id)
        
        if existing_user:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å
            treatment_repo = TreatmentRepository()
            active_course = await treatment_repo.get_active_by_user_id(existing_user.user_id)
            
            if active_course:
                gaspode_return = f"""
üê∫ **–†—Ä—Ä—Ä! –û–ø—è—Ç—å —Ç—ã, {existing_user.first_name}!**

–ì–∞—Å–ø–æ–¥ –ø–æ–º–Ω–∏—Ç –≤—Å–µ—Ö –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π. –£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è!

**–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:**
‚Ä¢ –î–µ–Ω—å –ª–µ—á–µ–Ω–∏—è: {active_course.days_since_start}
‚Ä¢ –§–∞–∑–∞: {active_course.current_phase}  
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–∂: {active_course.current_character}

–ù–µ –ø—ã—Ç–∞–π—Å—è —Å–±–µ–∂–∞—Ç—å! –ò—Å–ø–æ–ª—å–∑—É–π /stats –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.

*"–í—Ç–æ—Ä–æ–π —Ä–∞–∑ –ø–æ–ø–∞–ª—Å—è - –∑–Ω–∞—á–∏—Ç, –Ω–µ –Ω–∞—É—á–∏–ª—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ —Ä–∞–∑–∞."*
"""
                await update.message.reply_text(gaspode_return, parse_mode='Markdown')
                return
            else:
                # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –Ω–æ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞ - –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—ã–π
                await _start_new_course_for_existing_user(update, existing_user)
                return
        
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –≥–µ–Ω–¥–µ—Ä–∞
        gaspode_arrest = f"""
üê∫ **–†–†–†–†! –ü–æ–ø–∞–ª—Å—è, –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω {user.first_name}!**

–ì–∞—Å–ø–æ–¥, –¥–µ–∂—É—Ä–Ω—ã–π –ø—ë—Å –ì–æ—Ä–æ–¥—Å–∫–æ–π –°—Ç—Ä–∞–∂–∏ –ê–Ω–∫-–ú–æ—Ä–ø–æ—Ä–∫–∞. –¢–µ–±—è –∞—Ä–µ—Å—Ç–æ–≤–∞–ª–∏ –ø–æ –ø–æ–¥–æ–∑—Ä–µ–Ω–∏—é –≤ –∫—É—Ä–µ–Ω–∏–∏ —Ç–∞–±–∞–∫–∞ –≤ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–º –º–µ—Å—Ç–µ!

–ù–æ —É —Ç–µ–±—è –µ—Å—Ç—å –≤—ã–±–æ—Ä: —Ç—é—Ä—å–º–∞ –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è "–¢–∞–±–µ–∫—Å" –ø–æ–¥ –Ω–∞–¥–∑–æ—Ä–æ–º —Å—Ç—Ä–∞–∂–∏. 

**–ß—Ç–æ —Å–∫–∞–∂–µ—à—å?** *(–Ø—Å–Ω–æ–µ –¥–µ–ª–æ, –≤—ã–±–µ—Ä–µ—à—å –ø—Ä–æ–≥—Ä–∞–º–º—É - –≤—Å–µ –≤—ã–±–∏—Ä–∞—é—Ç)*

–ù–æ —Å–Ω–∞—á–∞–ª–∞, –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞, —É–∫–∞–∂–∏ —Å–≤–æ–π –ø–æ–ª. –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è... —ç—ç—ç... *"–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ö–æ–¥–∞"* –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏.

*"–ó–∞–∫–æ–Ω –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å, —Å –∫–µ–º –∏–º–µ–µ—Ç –¥–µ–ª–æ."*

‚Äî –ì–∞—Å–ø–æ–¥ (–∞—Ä–µ—Å—Ç–æ–≤–∞–≤—à–∏–π –æ—á–µ—Ä–µ–¥–Ω–æ–≥–æ –∫—É—Ä–∏–ª—å—â–∏–∫–∞)
"""
        
        # –°–æ–∑–¥–∞–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–µ–Ω–¥–µ—Ä–∞
        keyboard = [
            [InlineKeyboardButton("üë® –ú—É–∂—á–∏–Ω–∞", callback_data=f"gender_male_{user.id}")],
            [InlineKeyboardButton("üë© –ñ–µ–Ω—â–∏–Ω–∞", callback_data=f"gender_female_{user.id}")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(
            gaspode_arrest,
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        logger.info(f"–ì–∞—Å–ø–æ–¥ –∞—Ä–µ—Å—Ç–æ–≤–∞–ª –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} ({user.first_name})")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ /start: {e}")
        await update.message.reply_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∞—Ä–µ—Å—Ç–æ–º! "
            "–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –±–µ–≥–∏, –ø–æ–∫–∞ –ì–∞—Å–ø–æ–¥ –Ω–µ —Ä–∞–∑–æ–∑–ª–∏–ª—Å—è."
        )


async def _start_new_course_for_existing_user(update: Update, user_obj: User) -> None:
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        user_obj: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    """
    try:
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è
        treatment_repo = TreatmentRepository()
        
        new_course = TreatmentCourse(
            course_id=None,
            user_id=user_obj.user_id,
            start_date=date.today(),
            current_phase=1,
            current_character='gaspode'
        )
        
        created_course = await treatment_repo.create(new_course)
        
        gaspode_new_course = f"""
üê∫ **–†—Ä—Ä, –æ–ø—è—Ç—å –∑–∞ —Å—Ç–∞—Ä–æ–µ, {user_obj.first_name}?**

–õ–∞–¥–Ω–æ, –ì–∞—Å–ø–æ–¥ –Ω–µ –æ—Ç–∫–∞–∂–µ—Ç –≤ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º —à–∞–Ω—Å–µ. –í—Å–µ –∫—É—Ä—è—Ç, –≤—Å–µ —Ö–æ—Ç—è—Ç –±—Ä–æ—Å–∏—Ç—å.

**–ù–æ–≤—ã–π –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è "–¢–∞–±–µ–∫—Å" –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è!**

–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω—è–ª –ø–µ—Ä–≤—É—é —Ç–∞–±–ª–µ—Ç–∫—É. 
–§–æ—Ä–º–∞—Ç: **–ß–ß:–ú–ú** (–Ω–∞–ø—Ä–∏–º–µ—Ä: 08:30 –∏–ª–∏ 14:15)

*"–°–∫–æ–ª—å–∫–æ –≤–æ–ª–∫–∞ –Ω–∏ –∫–æ—Ä–º–∏, –∞ –æ–Ω –≤—Å–µ —Ä–∞–≤–Ω–æ –≤ –ª–µ—Å —Å–º–æ—Ç—Ä–∏—Ç. –ù–æ —Å –¢–∞–±–µ–∫—Å–æ–º –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å—Å—è."*

‚Äî –ì–∞—Å–ø–æ–¥ (–≥–æ—Ç–æ–≤ —Å–ª–µ–¥–∏—Ç—å —Å–Ω–æ–≤–∞)
"""
        
        await update.message.reply_text(gaspode_new_course, parse_mode='Markdown')
        
        logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è {created_course} –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—É—Ä—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.user_id}: {e}")
        await update.message.reply_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –Ω–æ–≤—ã–º –∫—É—Ä—Å–æ–º! "
            "–ü–æ–ø—Ä–æ–±—É–π /start –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –±–µ–≥–∏ –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!"
        )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –∫—Ä–∞—Ç–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ—Ç –ì–∞—Å–ø–æ–¥–∞.
    """
    user = update.effective_user
    
    gaspode_help = """
üê∫ **–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç –ì–∞—Å–ø–æ–¥–∞**

–°–ª—É—à–∞–π –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ, –¥–≤—É–Ω–æ–≥–∏–π. –ì–∞—Å–ø–æ–¥ –æ–±—ä—è—Å–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑.

**–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**
/start - –∞—Ä–µ—Å—Ç –∏ –Ω–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è (–≤—Å—Ç—Ä–µ—á–∞ —Å –ì–∞—Å–ø–æ–¥–∞)
/stats - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏
/quit - –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã (—Ç—Ä–µ–±—É–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è)
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞ (—Ç—ã —É–∂–µ —Ç—É—Ç)

**–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:**
1. –ì–æ–≤–æ—Ä–∏—à—å /start - –ì–∞—Å–ø–æ–¥ —Ç–µ–±—è –∞—Ä–µ—Å—Ç–æ–≤—ã–≤–∞–µ—Ç
2. –í—ã–±–∏—Ä–∞–µ—à—å —Å–≤–æ–π –ø–æ–ª (–≤–∞–∂–Ω–æ –¥–ª—è –ø—Ä–æ—Ç–æ–∫–æ–ª–∞)
3. –í–≤–æ–¥–∏—à—å –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–π —Ç–∞–±–ª–µ—Ç–∫–∏  
4. –ü–æ–ª—É—á–∞–µ—à—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–∂–Ω–∏–∫–æ–≤ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é —Ñ–∞–∑
5. –ü—Ä–∏–Ω–∏–º–∞–µ—à—å —Ç–∞–±–ª–µ—Ç–∫—É —á–µ—Ä–µ–∑ inline-–∫–Ω–æ–ø–∫–∏
6. –°–º–æ—Ç—Ä–∏—à—å /stats –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞

**–ö–Ω–æ–ø–∫–∏ –≤ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è—Ö:**
‚Ä¢ ‚úÖ –¢–ê–ë–õ–ï–¢–ö–ê –ü–†–ò–ù–Ø–¢–ê - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—ë–º–∞
‚Ä¢ ‚è∞ –û–¢–õ–û–ñ–ò–¢–¨ –ù–ê 5 –ú–ò–ù - –æ—Ç—Å—Ä–æ—á–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è  
‚Ä¢ ‚ùå –ü–†–û–ü–£–°–ö - –Ω–∞–º–µ—Ä–µ–Ω–Ω—ã–π –ø—Ä–æ–ø—É—Å–∫ –¥–æ–∑—ã

–ü–æ –º–µ—Ä–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—Å–∞ —Ç–µ–±—è –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º –°—Ç—Ä–∞–∂–∏. 25 –¥–Ω–µ–π –¥–æ —Ñ–∏–Ω–∞–ª–∞!

*"–ó–∞–∫–æ–Ω –∫–∞–∫ –∫–æ—Å—Ç—å - –≥—Ä—ã–∑—Ç—å –¥–æ–ª–≥–æ, –Ω–æ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –∑—É–±–æ–≤."*

‚Äî –ì–∞—Å–ø–æ–¥, –ì–æ—Ä–æ–¥—Å–∫–∞—è –°—Ç—Ä–∞–∂–∞ (–¥–µ–∂—É—Ä–Ω—ã–π –ø—ë—Å)
"""
    
    try:
        await update.message.reply_text(
            gaspode_help,
            parse_mode='Markdown'
        )
        logger.info(f"–ì–∞—Å–ø–æ–¥ –¥–∞–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id} ({user.first_name})")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–ø—Ä–∞–≤–∫–∏: {e}")
        await update.message.reply_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏! "
            "–ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –±–µ–≥–∏ –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É."
        )


async def unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.
    
    –û—Ç–≤–µ—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –µ—Å–ª–∏ –æ–Ω –≤–≤—ë–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–æ–º–∞–Ω–¥—É.
    """
    user = update.effective_user
    command = update.message.text
    
    vimes_unknown = f"""
üè¥‚Äç‚ò†Ô∏è **–ß—Ç–æ –∑–∞ –µ—Ä—É–Ω–¥–∞, –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω?**

–ö–æ–º–∞–Ω–¥–∞ `{command}` –Ω–µ –≤—Ö–æ–¥–∏—Ç –≤ –º–æ–∏ –ø–æ–ª–Ω–æ–º–æ—á–∏—è. 

–ö–∞–ø–∏—Ç–∞–Ω –í–∞–π–º—Å –ø–æ–Ω–∏–º–∞–µ—Ç —Ç–æ–ª—å–∫–æ:
‚Ä¢ /start - –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å–æ –°—Ç—Ä–∞–∂–µ–π
‚Ä¢ /stats - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å
‚Ä¢ /help - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏

–û—Å—Ç–∞–ª—å–Ω–æ–µ - –Ω–µ –º–æ–µ –¥–µ–ª–æ. –£ –°—Ç—Ä–∞–∂–∏ –µ—Å—Ç—å –±–æ–ª–µ–µ –≤–∞–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —á–µ–º —Ç–≤–æ–∏ —Ñ–∞–Ω—Ç–∞–∑–∏–∏.

*"–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –¥–µ–ª–∞–π —Ç–æ, —á—Ç–æ –∑–Ω–∞–µ—à—å."*
"""
    
    try:
        await update.message.reply_text(
            vimes_unknown,
            parse_mode='Markdown'
        )
        logger.info(f"–ö–∞–ø–∏—Ç–∞–Ω –í–∞–π–º—Å –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É '{command}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã: {e}")


async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.
    """
    user = update.effective_user
    
    try:
        await init_database()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫—É—Ä—Å–∞
        user_repo = UserRepository()
        user_obj = await user_repo.get_by_telegram_id(user.id)
        
        if not user_obj:
            await update.message.reply_text(
                "‚ùì –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /start"
            )
            return
        
        treatment_repo = TreatmentRepository()
        active_course = await treatment_repo.get_active_by_user_id(user_obj.user_id)
        
        if not active_course:
            await update.message.reply_text(
                "‚ùì –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –ª–µ—á–µ–Ω–∏—è. –ù–∞—á–Ω–∏ –Ω–æ–≤—ã–π —Å –∫–æ–º–∞–Ω–¥—ã /start"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        current_character = character_service.get_current_character(active_course)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        tabex_repo = TabexRepository()
        all_logs = await tabex_repo.get_logs_by_course_id(active_course.course_id)
        
        # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_scheduled = len(all_logs)
        taken_count = sum(1 for log in all_logs if log.is_taken)
        missed_count = sum(1 for log in all_logs if log.is_missed or log.is_skipped)
        
        compliance_percent = int((taken_count / max(total_scheduled, 1)) * 100)
        days_passed = active_course.days_since_start
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –±—Ä–æ—Å–∏–ª –ª–∏ –∫—É—Ä–∏—Ç—å (5-–π –¥–µ–Ω—å –ø—Ä–æ—à–µ–ª)
        quit_smoking_info = ""
        if days_passed >= 5:
            quit_date = active_course.smoking_quit_date or (active_course.start_date + timedelta(days=4))
            days_smoke_free = (date.today() - quit_date).days + 1
            quit_smoking_info = f"üö≠ **–î–Ω–∏ –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è:** {days_smoke_free}\n"
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç –æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        stats_message = f"""
{current_character.emoji} **–û—Ç—á–µ—Ç {current_character.name} –æ —Ç–≤–æ–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å–µ**

üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:**

üìÖ **–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞:** {active_course.start_date.strftime('%d.%m.%Y')}
‚è∞ **–î–Ω–µ–π –ø—Ä–æ—à–ª–æ:** {days_passed}/25
üìä **–¢–µ–∫—É—â–∞—è —Ñ–∞–∑–∞:** {active_course.current_phase}
{quit_smoking_info}
‚úÖ **–ü—Ä–∏–Ω—è—Ç–æ —Ç–∞–±–ª–µ—Ç–æ–∫:** {taken_count}
‚ùå **–ü—Ä–æ–ø—É—â–µ–Ω–æ:** {missed_count}
üìà **–°–æ–±–ª—é–¥–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞:** {compliance_percent}%

**–¢–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂:** {current_character.name} {current_character.emoji}

*{current_character.get_encouragement_message(user_obj.first_name, user_obj.gender, compliance_percent)}*
"""
        
        await update.message.reply_text(
            stats_message,
            parse_mode='Markdown'
        )
        logger.info(f"{current_character.name} –ø–æ–∫–∞–∑–∞–ª —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. "
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


async def handle_text_input(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç:
    - –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è "–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ"
    - –í–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏—ë–º–∞ —Ç–∞–±–ª–µ—Ç–∫–∏
    """
    user = update.effective_user
    text = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
    if context.user_data.get('awaiting_deletion_confirmation'):
        if text == "–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ":
            await handle_deletion_confirmation(update, context)
            return
        else:
            await update.message.reply_text(
                "‚ùì –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏ —Ç–æ—á–Ω–æ: **–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ**\n"
                "–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π: `/start`",
                parse_mode='Markdown'
            )
            return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if not context.user_data.get('awaiting_first_dose_time'):
        return  # –≠—Ç–æ –Ω–µ –≤–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú
    time_pattern = r'^([01]?[0-9]|2[0-3]):([0-5][0-9])$'
    match = re.match(time_pattern, text)
    
    if not match:
        gaspode_error = """
üê∫ **–†—Ä—Ä, —á—Ç–æ –∑–∞ —Å–æ–±–∞—á—å—è —á—É—à—å?**

–ì–∞—Å–ø–æ–¥ —è—Å–Ω–æ —Å–∫–∞–∑–∞–ª: —Ñ–æ—Ä–º–∞—Ç **–ß–ß:–ú–ú**

–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞:
‚Ä¢ 08:30
‚Ä¢ 14:15  
‚Ä¢ 09:00
‚Ä¢ 21:45

–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. –°–æ–±–∞—á—å–µ —Ç–µ—Ä–ø–µ–Ω–∏–µ –Ω–µ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ.

*"–î–∞–∂–µ —Å–æ–±–∞–∫–∏ –ø–æ–Ω–∏–º–∞—é—Ç –≤—Ä–µ–º—è –ª—É—á—à–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ª—é–¥–µ–π."*
"""
        await update.message.reply_text(gaspode_error, parse_mode='Markdown')
        return
    
    try:
        # –í—Ä–µ–º—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º
        hours, minutes = int(match.group(1)), int(match.group(2))
        first_dose_time = f"{hours:02d}:{minutes:02d}"
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫—É—Ä—Å–∞ –∏–∑ context
        user_obj = context.user_data.get('user_obj')
        course_obj = context.user_data.get('course_obj')
        
        if not user_obj:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, –ø–æ–ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –ë–î
            user_repo = UserRepository()
            user_obj = await user_repo.get_by_telegram_id(user.id)
            
            if not user_obj:
                await update.message.reply_text(
                    "üê∫ –†—Ä—Ä—Ä! –ì–∞—Å–ø–æ–¥ —Ç–µ–±—è –Ω–µ –ø–æ–º–Ω–∏—Ç! –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /start"
                )
                return
        
        if not course_obj:
            # –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∫—É—Ä—Å–∞, –ø–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—Å –∏–∑ –ë–î
            treatment_repo = TreatmentRepository()
            course_obj = await treatment_repo.get_active_by_user_id(user_obj.user_id)
            
            if not course_obj:
                await update.message.reply_text(
                    "üê∫ –†—Ä—Ä—Ä! –£ —Ç–µ–±—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—Å–∞ –ª–µ—á–µ–Ω–∏—è! –ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /start"
                )
                return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
        context.user_data['first_dose_time'] = first_dose_time
        context.user_data['awaiting_first_dose_time'] = False
        context.user_data['program_started'] = True
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ì–∞—Å–ø–æ–¥)
        current_character = character_service.get_current_character(course_obj)
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –ø—Ä–∏–Ω—è—Ç–æ–π –ø–µ—Ä–≤–æ–π –¥–æ–∑–µ
        from core.models.tabex_log import TabexLog, TabexLogStatus
        from database.repositories import TabexRepository
        
        tabex_repo = TabexRepository()
        now = datetime.now()
        first_time = datetime.combine(now.date(), datetime.strptime(first_dose_time, "%H:%M").time())
        
        # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –æ –ø–µ—Ä–≤–æ–π –¥–æ–∑–µ –∫–∞–∫ –ø—Ä–∏–Ω—è—Ç–æ–π
        first_dose_log = TabexLog(
            log_id=None,
            course_id=course_obj.course_id,
            scheduled_time=first_time,
            actual_time=first_time,
            status=TabexLogStatus.TAKEN.value,
            phase=course_obj.current_phase,
            character_response=f"{current_character.name} –∑–∞–ø–∏—Å–∞–ª –ø–µ—Ä–≤—ã–π –ø—Ä–∏—ë–º –≤ {first_dose_time}"
        )
        await tabex_repo.create_log(first_dose_log)
        logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –∑–∞–ø–∏—Å—å –æ –ø–µ—Ä–≤–æ–π –¥–æ–∑–µ –≤ {first_dose_time} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.telegram_id}")
        
        if first_time < now:
            # –í—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ —Å–µ–≥–æ–¥–Ω—è - –∏—â–µ–º –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –¥–æ–∑—ã
            existing_logs = [first_dose_log]  # –í–∫–ª—é—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—É—é –ø–µ—Ä–≤—É—é –¥–æ–∑—É
            overdue_doses = schedule_service.get_overdue_doses(course_obj, first_dose_time, existing_logs)
            
            if overdue_doses:
                # –ï—Å—Ç—å –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–µ –¥–æ–∑—ã - –Ω–∞—á–∏–Ω–∞–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å
                await _start_interactive_catchup(update, context, user_obj, course_obj, current_character, overdue_doses, first_dose_time)
                return
        
        # –ù–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–æ–∑ - –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º
        await _start_normal_program(update, context, user_obj, course_obj, current_character, first_dose_time)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–∏: {e}")
        await update.message.reply_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –∑–∞–ø–∏—Å—å—é –≤—Ä–µ–º–µ–Ω–∏! "
            "–ü–æ–ø—Ä–æ–±—É–π /start –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –±–µ–≥–∏ –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!"
        )


async def _start_interactive_catchup(update: Update, context: ContextTypes.DEFAULT_TYPE, 
                                   user_obj: User, course_obj: TreatmentCourse,
                                   current_character, overdue_doses, first_dose_time: str) -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –æ–ø—Ä–æ—Å –ø–æ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã–º –¥–æ–∑–∞–º.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        user_obj: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        course_obj: –û–±—ä–µ–∫—Ç –∫—É—Ä—Å–∞ –ª–µ—á–µ–Ω–∏—è
        current_character: –¢–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂
        overdue_doses: –°–ø–∏—Å–æ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–æ–∑
        first_dose_time: –í—Ä–µ–º—è –ø–µ—Ä–≤–æ–π –¥–æ–∑—ã
    """
    try:
        gender_pronoun = "–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω" if user_obj.is_male() else "–≥—Ä–∞–∂–¥–∞–Ω–∫–∞"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è callback'–æ–≤
        context.user_data['catchup_mode'] = True
        context.user_data['overdue_doses'] = overdue_doses
        context.user_data['current_catchup_index'] = 0
        context.user_data['first_dose_time'] = first_dose_time
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–ø—Ä–æ—Å–∞
        intro_message = f"""
{current_character.emoji} **–°—Ç–æ–ø, {gender_pronoun} {user_obj.first_name}!**

{current_character.name} –∑–∞–º–µ—Ç–∏–ª: —Å **{first_dose_time}** —É–∂–µ –ø—Ä–æ—à–ª–æ –≤—Ä–µ–º—è –¥–ª—è **{len(overdue_doses)} –¥–æ–∑**!

–ù—É–∂–Ω–æ –≤—ã—è—Å–Ω–∏—Ç—å - —á—Ç–æ —Ç—ã –¥–µ–ª–∞–ª{"" if user_obj.gender == "male" else "–∞"} –≤—Å—ë —ç—Ç–æ –≤—Ä–µ–º—è.

**–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ–¥—ë–º –¥–æ–ø—Ä–æ—Å –ø–æ –∫–∞–∂–¥–æ–π –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–π –¥–æ–∑–µ.**

*"–°—Ç—Ä–∞–∂–∞ –¥–æ–ª–∂–Ω–∞ –∑–Ω–∞—Ç—å –ø—Ä–∞–≤–¥—É. –í—Å—é –ø—Ä–∞–≤–¥—É."*

‚Äî {current_character.name} (–Ω–∞—á–∏–Ω–∞–µ—Ç —Ä–∞—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ)
"""
        
        await update.message.reply_text(
            intro_message,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å –ø–æ –ø–µ—Ä–≤–æ–π –¥–æ–∑–µ
        await _ask_about_dose(update, context, user_obj, overdue_doses[0], 0, len(overdue_doses), current_character)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞: {e}")
        await update.message.reply_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –æ–ø—Ä–æ—Å–æ–º! "
            "–ü–æ–ø—Ä–æ–±—É–π /start –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –±–µ–≥–∏ –∫ –≤–µ—Ç–µ—Ä–∏–Ω–∞—Ä—É!"
        )


async def _ask_about_dose(update: Update, context: ContextTypes.DEFAULT_TYPE,
                         user_obj: User, dose_schedule, dose_index: int, total_doses: int,
                         current_character) -> None:
    """
    –ó–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–π –¥–æ–∑–µ.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        user_obj: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        dose_schedule: –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–æ–∑—ã
        dose_index: –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –¥–æ–∑—ã
        total_doses: –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∑
        current_character: –¢–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂
    """
    try:
        gender_pronoun = "–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω" if user_obj.is_male() else "–≥—Ä–∞–∂–¥–∞–Ω–∫–∞"
        dose_time = dose_schedule.scheduled_time.strftime("%H:%M")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è (—Å–∞–º–∞—è –∞–∫—Ç—É–∞–ª—å–Ω–∞—è) –¥–æ–∑–∞ –∏–ª–∏ –Ω–µ—Ç
        is_last_dose = (dose_index == total_doses - 1)
        
        question_message = f"""
{current_character.emoji} **–î–æ–ø—Ä–æ—Å #{dose_index + 1}/{total_doses}**

{gender_pronoun.title()} {user_obj.first_name}, —á—Ç–æ –±—ã–ª–æ –≤ **{dose_time}**?

‚è∞ **–î–æ–∑–∞ ‚Ññ{dose_schedule.dose_number} ({dose_schedule.day}-–π –¥–µ–Ω—å)**

–û—Ç–≤–µ—á–∞–π —á–µ—Å—Ç–Ω–æ - {current_character.name} –≤—Å—ë —Ä–∞–≤–Ω–æ –≤—Å—ë –≤—ã—è—Å–Ω–∏—Ç!

*"–ü—Ä–∞–≤–¥–∞ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞—Ä—É–∂—É —Ä–∞–Ω–æ –∏–ª–∏ –ø–æ–∑–¥–Ω–æ."*
"""
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
        buttons = []
        buttons.append([InlineKeyboardButton("‚úÖ –ü—Ä–∏–Ω—è–ª(–∞)", callback_data=f"catchup_taken_{dose_index}")])
        buttons.append([InlineKeyboardButton("‚ùå –ü—Ä–æ–ø—É—Å–∫", callback_data=f"catchup_missed_{dose_index}")])
        
        # –î–ª—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –¥–æ–∑—ã –¥–æ–±–∞–≤–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç—Å—Ä–æ—á–∫–∏
        if is_last_dose:
            buttons.append([InlineKeyboardButton("‚è∞ –û—Ç–ª–æ–∂–∏—Ç—å –Ω–∞ 5 –º–∏–Ω", callback_data=f"catchup_postpone_{dose_index}")])
        
        keyboard = InlineKeyboardMarkup(buttons)
        
        await update.message.reply_text(
            question_message,
            parse_mode='Markdown',
            reply_markup=keyboard
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–∞ –æ –¥–æ–∑–µ: {e}")


async def _start_normal_program(update: Update, context: ContextTypes.DEFAULT_TYPE,
                               user_obj: User, course_obj: TreatmentCourse, 
                               current_character, first_dose_time: str) -> None:
    """
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º –ø—Ä–æ–≥—Ä–∞–º–º—ã –±–µ–∑ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö –¥–æ–∑.
    
    Args:
        update: –û–±—ä–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞  
        user_obj: –û–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        course_obj: –û–±—ä–µ–∫—Ç –∫—É—Ä—Å–∞ –ª–µ—á–µ–Ω–∏—è
        current_character: –¢–µ–∫—É—â–∏–π –ø–µ—Ä—Å–æ–Ω–∞–∂
        first_dose_time: –í—Ä–µ–º—è –ø–µ—Ä–≤–æ–π –¥–æ–∑—ã
    """
    try:
        gender_pronoun = "–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω" if user_obj.is_male() else "–≥—Ä–∞–∂–¥–∞–Ω–∫–∞"
        
        gaspode_confirmation = f"""
{current_character.emoji} **–û—Ç–ª–∏—á–Ω–æ, {gender_pronoun} {user_obj.first_name}!**

{current_character.name} –∑–∞–ø–∏—Å–∞–ª: –ø–µ—Ä–≤—ã–π –ø—Ä–∏—ë–º –≤ **{first_dose_time}**.

**–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!** ‚úÖ

–¢–µ–ø–µ—Ä—å –ì–æ—Ä–æ–¥—Å–∫–∞—è –°—Ç—Ä–∞–∂–∞ –±—É–¥–µ—Ç –Ω–∞–≤–µ–¥—ã–≤–∞—Ç—å—Å—è –∫ —Ç–µ–±–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–±–ª—é–¥–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é —Ñ–∞–∑ –ª–µ—á–µ–Ω–∏—è.

*"–†–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å ‚Äî —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã. –ê –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ ‚Äî –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—Ö–∞."*

‚Äî {current_character.name} (—Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ —Å–ª–µ–¥–∏—Ç –∑–∞ —Ç–≤–æ–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º)

**–ò—Å–ø–æ–ª—å–∑—É–π /stats –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.**
"""
        
        await update.message.reply_text(
            gaspode_confirmation, 
            parse_mode='Markdown'
        )
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_obj.telegram_id} —É—Å—Ç–∞–Ω–æ–≤–∏–ª –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–∏—ë–º–∞: {first_dose_time}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        success = await reminder_service.start_reminders_for_user(user_obj.telegram_id, first_dose_time, context.bot)
        if success:
            logger.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.telegram_id}")
        else:
            logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_obj.telegram_id}")
            await update.message.reply_text(
                "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É /start."
            )
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–±—ã—á–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã: {e}")


async def handle_deletion_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
    """
    user = update.effective_user
    user_id_to_delete = context.user_data.get('user_to_delete')
    
    try:
        if not user_id_to_delete:
            await update.message.reply_text(
                "‚ö†Ô∏è –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π /quit –∑–∞–Ω–æ–≤–æ."
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
        user_repo = UserRepository()
        treatment_repo = TreatmentRepository()
        tabex_repo = TabexRepository()
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
        await reminder_service.stop_reminders_for_user(user.id)
        
        # –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–æ—Ç –∑–∞–≤–∏—Å–∏–º—ã—Ö –∫ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º)
        # 1. –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å–∏ –ø—Ä–∏—ë–º–æ–≤ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è (–∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫—É—Ä—Å–æ–≤)
        await tabex_repo.delete_all_logs_for_user(user_id_to_delete)
        await tabex_repo.delete_all_interactions_for_user(user_id_to_delete)
        
        # 2. –£–¥–∞–ª—è–µ–º –∫—É—Ä—Å—ã –ª–µ—á–µ–Ω–∏—è (–∑–∞–≤–∏—Å—è—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
        await treatment_repo.delete_all_by_user_id(user_id_to_delete)
        
        # 3. –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await user_repo.delete(user_id_to_delete)
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        context.user_data.clear()
        
        death_farewell = """
üíÄ **–ì–û–¢–û–í–û.**

–°–º–µ—Ä—Ç—å –≤—ã–ø–æ–ª–Ω–∏–ª–∞ —Ç–≤–æ—é –ø—Ä–æ—Å—å–±—É. –¢–≤–æ—ë –¥–æ—Å—å–µ —Å—Ç—ë—Ä—Ç–æ –∏–∑ –∞—Ä—Ö–∏–≤–æ–≤ –°—Ç—Ä–∞–∂–∏.

**–ß—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ:**
‚úÖ –£–¥–∞–ª–µ–Ω—ã –≤—Å–µ –∫—É—Ä—Å—ã –ª–µ—á–µ–Ω–∏—è
‚úÖ –£–¥–∞–ª–µ–Ω–∞ –≤—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
‚úÖ –£–¥–∞–ª–µ–Ω–∞ –∏—Å—Ç–æ—Ä–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π  
‚úÖ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚úÖ –°—Ç—ë—Ä—Ç–∞ —Ç–≤–æ—è —É—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å

–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–π `/start` –∫–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.

*"–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ª—é–¥–∏ –¥—É–º–∞—é—Ç, —á—Ç–æ –°–º–µ—Ä—Ç—å –∂–µ—Å—Ç–æ–∫–∞. –ù–æ –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –°–º–µ—Ä—Ç—å –¥–∞—ë—Ç –≤—Ç–æ—Ä–æ–π —à–∞–Ω—Å."*

‚Äî –°–º–µ—Ä—Ç—å (–∞—Ä—Ö–∏–≤–∞—Ä–∏—É—Å –∑–∞–±–≤–µ–Ω–∏—è)

**–£–≤–∏–¥–∏–º—Å—è —Å–Ω–æ–≤–∞, –∫–æ–≥–¥–∞ —Ä–µ—à–∏—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è...**
"""
        
        await update.message.reply_text(
            death_farewell,
            parse_mode='Markdown'
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ —Å–∏—Å—Ç–µ–º—ã")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id}: {e}")
        await update.message.reply_text(
            "üíÄ **–û–®–ò–ë–ö–ê –°–ú–ï–†–¢–ò**\n\n"
            "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Å—Ç–∏—Ä–∞–Ω–∏–∏ –¥–æ—Å—å–µ. "
            "–ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        # –û—á–∏—â–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        context.user_data.pop('awaiting_deletion_confirmation', None)
        context.user_data.pop('user_to_delete', None)


async def quit_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /quit - –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
    
    –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏ —É–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    user = update.effective_user
    
    try:
        await init_database()
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_repo = UserRepository()
        user_obj = await user_repo.get_by_telegram_id(user.id)
        
        if not user_obj:
            await update.message.reply_text(
                "‚ùì –¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ —Å–∏—Å—Ç–µ–º–µ. –ù–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å."
            )
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∂–¥–µ–º –ª–∏ –º—ã —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if context.user_data.get('awaiting_deletion_confirmation'):
            await update.message.reply_text(
                "‚ö†Ô∏è –Ø —É–∂–µ –∂–¥—É —Ç–≤–æ–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏ **–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ** –∏–ª–∏ /start —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å.",
                parse_mode='Markdown'
            )
            return
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        context.user_data['awaiting_deletion_confirmation'] = True
        context.user_data['user_to_delete'] = user_obj.user_id
        
        warning_message = f"""
üíÄ **–í–ù–ò–ú–ê–ù–ò–ï, {user_obj.first_name}!**

–¢—ã –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –¢–∞–±–µ–∫—Å-–ø–æ–º–æ—â–Ω–∏–∫–∞.

**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:**
‚Ä¢ –£–¥–∞–ª–∏—Ç –í–°–ï —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –ª–µ—á–µ–Ω–∏—è  
‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å–µ –∫—É—Ä—Å—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç –≤—Å–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
‚Ä¢ **–î–ï–ô–°–¢–í–ò–ï –ù–ï–û–ë–†–ê–¢–ò–ú–û!**

–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞.

**–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏ —Ç–æ—á–Ω–æ:** `–ü–û–î–¢–í–ï–†–ñ–î–ê–Æ`
**–î–ª—è –æ—Ç–º–µ–Ω—ã –∏—Å–ø–æ–ª—å–∑—É–π:** `/start`

*"–°–º–µ—Ä—Ç—å - —ç—Ç–æ –Ω–µ –∫–æ–Ω–µ—Ü. –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ... –æ—á–µ–Ω—å –Ω–µ—É–¥–æ–±–Ω–æ."*

‚Äî –°–º–µ—Ä—Ç—å (–≥–æ—Ç–æ–≤ —Å—Ç–µ—Ä–µ—Ç—å —Ç–≤–æ—ë –¥–æ—Å—å–µ)
"""
        
        await update.message.reply_text(
            warning_message,
            parse_mode='Markdown'
        )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –∑–∞–ø—Ä–æ—Å–∏–ª —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö, –∂–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )


def setup_command_handlers(app: Application) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
    
    Args:
        app: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Application –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ handlers
    """
    try:
        # MVP –∫–æ–º–∞–Ω–¥—ã –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–∞ –í–∞–π–º—Å–∞
        app.add_handler(CommandHandler("start", start_command))
        app.add_handler(CommandHandler("help", help_command))
        app.add_handler(CommandHandler("stats", stats_command))
        
        # –ö–æ–º–∞–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫—É—Ä—Å–∞ –¥–æ—Å—Ä–æ—á–Ω–æ
        app.add_handler(CommandHandler("quit", quit_command))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–≤—Ä–µ–º—è, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è)
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_input))
        
        logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥: {e}")
        raise
