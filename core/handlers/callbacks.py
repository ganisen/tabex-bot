"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫ Telegram-–±–æ—Ç–∞.

–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏,
—Ç–∞–∫–∏–µ –∫–∞–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—ë–º–∞ —Ç–∞–±–ª–µ—Ç–æ–∫, –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–Ω—é –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
"""
import logging
from datetime import date
from telegram import Update
from telegram.ext import Application, CallbackQueryHandler, ContextTypes

from core.models.user import User
from core.models.treatment import TreatmentCourse
from database.repositories import UserRepository, TreatmentRepository

logger = logging.getLogger(__name__)


async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –æ—Ç inline-–∫–Ω–æ–ø–æ–∫.
    
    –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∏—Ä—É–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –Ω–∞ –æ—Å–Ω–æ–≤–µ
    –¥–∞–Ω–Ω—ã—Ö callback (callback_data).
    """
    query = update.callback_query
    user = update.effective_user
    callback_data = query.data
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ callback
    await query.answer()
    
    logger.info(f"–ü–æ–ª—É—á–µ–Ω callback '{callback_data}' –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} ({user.first_name})")
    
    try:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–µ–Ω–¥–µ—Ä–∞
        if callback_data.startswith("gender_"):
            await _handle_gender_selection(query, context, callback_data)
        
        elif callback_data == "placeholder":
            await query.edit_message_text("üîß –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö.")
        
        else:
            # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback
            await query.edit_message_text(
                f"‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ: {callback_data}\n\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É."
            )
            logger.warning(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback_data: {callback_data}")
    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ callback '{callback_data}': {e}")
        try:
            await query.edit_message_text(
                "üîß –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞. "
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
        except Exception:
            # –ï—Å–ª–∏ –¥–∞–∂–µ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –¥–ª—è callback")


async def _handle_gender_selection(query, context: ContextTypes.DEFAULT_TYPE, callback_data: str) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –≥–µ–Ω–¥–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.
    
    Args:
        query: Callback query –æ—Ç Telegram
        context: –ö–æ–Ω—Ç–µ–∫—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        callback_data: –î–∞–Ω–Ω—ã–µ callback –≤ —Ñ–æ—Ä–º–∞—Ç–µ "gender_{male|female}_{user_id}"
    """
    user = query.from_user
    
    # –ü–∞—Ä—Å–∏–º callback_data: gender_male_123456 –∏–ª–∏ gender_female_123456
    parts = callback_data.split('_')
    if len(parts) != 3:
        logger.error(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç callback_data: {callback_data}")
        await query.edit_message_text("üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–º!")
        return
    
    gender = parts[1]  # male –∏–ª–∏ female
    expected_user_id = int(parts[2])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ callback –æ—Ç —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user.id != expected_user_id:
        await query.answer("–≠—Ç–æ –Ω–µ —Ç–≤–æ–π –≤—ã–±–æ—Ä!", show_alert=True)
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        user_repo = UserRepository()
        
        new_user = User(
            user_id=None,
            telegram_id=user.id,
            first_name=user.first_name,
            username=user.username,
            gender=gender
        )
        
        created_user = await user_repo.create(new_user)
        
        # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è
        treatment_repo = TreatmentRepository()
        
        new_course = TreatmentCourse(
            course_id=None,
            user_id=created_user.user_id,
            start_date=date.today(),
            current_phase=1,
            current_character='gaspode'
        )
        
        await treatment_repo.create(new_course)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≥–µ–Ω–¥–µ—Ä–Ω–æ-–∑–∞–≤–∏—Å–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ì–∞—Å–ø–æ–¥–∞
        gender_display = "–º—É–∂—á–∏–Ω–∞" if gender == "male" else "–∂–µ–Ω—â–∏–Ω–∞"
        gender_pronoun = "–≥—Ä–∞–∂–¥–∞–Ω–∏–Ω" if gender == "male" else "–≥—Ä–∞–∂–¥–∞–Ω–∫–∞"
        
        gaspode_registered = f"""
üê∫ **–û—Ç–ª–∏—á–Ω–æ, {gender_pronoun} {user.first_name}!**

–ì–∞—Å–ø–æ–¥ –∑–∞–ø–∏—Å–∞–ª: {gender_display}. –¢–µ–ø–µ—Ä—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ –°—Ç—Ä–∞–∂–∏.

**–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è "–¢–∞–±–µ–∫—Å" –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!**

–ö–∞–∂–¥—ã–µ 2 —á–∞—Å–∞ –∫ —Ç–µ–±–µ –±—É–¥–µ—Ç –Ω–∞–≤–µ–¥—ã–≤–∞—Ç—å—Å—è –∫—Ç–æ-—Ç–æ –∏–∑ —Å—Ç—Ä–∞–∂–∏ –¥–ª—è... *–ø—Ä–æ–≤–µ—Ä–∫–∏*. 

üìù **–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –≤—Ä–µ–º—è –ø–µ—Ä–≤–æ–π —Ç–∞–±–ª–µ—Ç–∫–∏:**
–ö–æ–≥–¥–∞ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø—Ä–∏–Ω—è–ª –ø–µ—Ä–≤—É—é —Ç–∞–±–ª–µ—Ç–∫—É –¢–∞–±–µ–∫—Å–∞?
–§–æ—Ä–º–∞—Ç: **–ß–ß:–ú–ú** (–Ω–∞–ø—Ä–∏–º–µ—Ä: 08:30 –∏–ª–∏ 14:15)

*"–ó–∞–∫–æ–Ω - –æ–Ω –∫–∞–∫ —Ç–∞–±–∞–∫. –ë—Ä–æ—Å–∏—Ç—å —Ç—è–∂–µ–ª–æ, –Ω–æ –Ω–∞–¥–æ."*

‚Äî –ì–∞—Å–ø–æ–¥ (–∑–∞–ø–∏—Å–∞–ª –≤—Å—ë –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª)
"""
        
        await query.edit_message_text(gaspode_registered, parse_mode='Markdown')
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        context.user_data['awaiting_first_dose_time'] = True
        context.user_data['user_obj'] = created_user
        context.user_data['course_obj'] = new_course
        
        logger.info(f"–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {created_user} —Å –≥–µ–Ω–¥–µ—Ä–æ–º {gender} –∏ –∫—É—Ä—Å –ª–µ—á–µ–Ω–∏—è")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫—É—Ä—Å–∞: {e}")
        await query.edit_message_text(
            "üê∫ –†—Ä—Ä—Ä! –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ –°—Ç—Ä–∞–∂–∏! "
            "–ü–æ–ø—Ä–æ–±—É–π –∫–æ–º–∞–Ω–¥—É /start –µ—â–µ —Ä–∞–∑."
        )


def setup_callback_handlers(app: Application) -> None:
    """
    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.
    
    Args:
        app: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Application –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ handlers
    """
    try:
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö callback-–∑–∞–ø—Ä–æ—Å–æ–≤
        app.add_handler(CallbackQueryHandler(button_callback))
        
        logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ callback: {e}")
        raise
